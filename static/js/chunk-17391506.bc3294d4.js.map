{"version":3,"sources":["webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_new-promise-capability.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/get-iterator.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/pouchdb/lib/index-browser.es.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_invoke.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_set-species.js","webpack:///./node_modules/pouchdb/node_modules/uuid/lib/rng-browser.js","webpack:///./src/views/WriteView.vue?7f8c","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_species-constructor.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_microtask.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_redefine-all.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_iter-detect.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_for-of.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es6.promise.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/get-iterator.js","webpack:///./node_modules/spark-md5/spark-md5.js","webpack:///./node_modules/vuvuzela/index.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_perform.js","webpack:///./node_modules/pouchdb/node_modules/uuid/index.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/promise.js","webpack:///./src/views/WriteView.vue?ef96","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/readOnlyError.js","webpack:///./src/components/MessageBlock.vue?12ed","webpack:///src/components/MessageBlock.vue","webpack:///./src/components/MessageBlock.vue?bd14","webpack:///./src/components/MessageBlock.vue","webpack:///./src/storage/message.ts","webpack:///./src/storage/db.ts","webpack:///src/views/WriteView.vue","webpack:///./src/views/WriteView.vue?6290","webpack:///./src/views/WriteView.vue","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_classof.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_user-agent.js","webpack:///./src/components/MessageBlock.vue?d392","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_iter-call.js","webpack:///./node_modules/pouchdb/node_modules/uuid/v1.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_an-instance.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es7.promise.finally.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/core.get-iterator.js","webpack:///./node_modules/pouchdb/node_modules/uuid/v4.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_is-array-iter.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es7.promise.try.js","webpack:///./node_modules/pouchdb/node_modules/uuid/lib/bytesToUuid.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/promise.js","webpack:///./node_modules/argsarray/index.js","webpack:///./node_modules/immediate/lib/browser.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_promise-resolve.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_task.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/core.get-iterator-method.js","webpack:///./node_modules/events/events.js"],"names":["aFunction","__webpack_require__","PromiseCapability","C","resolve","reject","this","promise","$$resolve","$$reject","undefined","TypeError","module","exports","f","global","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","tokens","links","Object","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","lexer","prototype","token","top","next","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","name","val","cleanUrl","base","prot","decodeURIComponent","e","originIndependentUrl","resolveUrl","encodeURI","baseUrls","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","baseUrl","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","errMsg","silent","console","log","value","hasOwnProperty","originalSlug","&","<",">","\"","'","obj","target","key","arguments","call","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","setOptions","getDefaults","inlineLexer","window","process","argsarray__WEBPACK_IMPORTED_MODULE_0__","argsarray__WEBPACK_IMPORTED_MODULE_0___default","immediate__WEBPACK_IMPORTED_MODULE_1__","immediate__WEBPACK_IMPORTED_MODULE_1___default","events__WEBPACK_IMPORTED_MODULE_2__","inherits__WEBPACK_IMPORTED_MODULE_3__","inherits__WEBPACK_IMPORTED_MODULE_3___default","spark_md5__WEBPACK_IMPORTED_MODULE_4__","spark_md5__WEBPACK_IMPORTED_MODULE_4___default","uuid__WEBPACK_IMPORTED_MODULE_5__","uuid__WEBPACK_IMPORTED_MODULE_5___default","vuvuzela__WEBPACK_IMPORTED_MODULE_6__","vuvuzela__WEBPACK_IMPORTED_MODULE_6___default","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","byteLength","targetArray","Uint8Array","sourceArray","set","cloneBinaryObject","size","webkitSlice","ExportedSet","ExportedMap","funcToString","Function","objectCtorString","isPlainObject","proto","getPrototypeOf","Ctor","constructor","clone","newObject","len","Array","isArray","Date","toISOString","once","fun","called","args","apply","toPromise","func","self","usedCB","Promise","fulfill","resp","mesg","then","result","logApiCall","listeners","logArgs","emit","origCallback","res","responseArgs","concat","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","unmangle","Map$1","_store","Set$1","array","add","supportsMapAndSet","Symbol","Map","Set","prop","getOwnPropertyDescriptor","species","pick","arr","get","mangled","has","delete","forEach","cb","keys","defineProperty","hasLocal","assign","MAX_NUM_CONCURRENT_REQUESTS","identityFunction","x","formatResultForOpenRevsGet","ok","bulkGet","db","opts","requests","docs","requestsById","request","id","numDocs","numDone","perDocResults","collapseResultsAndFinish","results","info","checkDone","gotResult","docIndex","allRequests","nextBatch","upTo","min","batch","processBatch","docId","docIdx","docRequests","docOpts","open_revs","map","rev","filter","formatResult","param","error","localStorage","setItem","getItem","hasLocalStorage","attachBrowserEvents","addEventListener","Changes","_listeners","guardedConsole","method","randomNumber","max","maxTimeout","ratio","range","defaultBackOff","explainError","status","addListener","dbName","inprogress","eventFunction","on","changesOpts","changes","seq","since","cancelled","onChange","onError","removeListener","notifyLocalWindows","notify","to","index","nextSource","nextKey","$inject_Object_assign","PouchError","reason","JSON","stringify","MISSING_BULK_DOCS","MISSING_DOC","REV_CONFLICT","INVALID_ID","MISSING_ID","RESERVED_ID","UNKNOWN_ERROR","BAD_ARG","QUERY_PARSE_ERROR","DOC_VALIDATION","BAD_REQUEST","NOT_AN_OBJECT","IDB_ERROR","INVALID_REV","MISSING_STUB","createError","CustomPouchError","p","generateErrorFromResponse","data","tryFilter","doc","req","msg","filterChange","hasFilter","query","query_params","change","filterReturn","include_docs","attachments","att","_attachments","stub","flatten","arrs","invalidIdError","isRemote","_remote","listenerCount","ee","parseDesignDocFunctionName","s","parts","normalizeDesignDocFunctionName","normalized","qName","qParser","parseUri","m","uri","encoded","$0","$1","$2","scopeEval","scope","values","upsert","diffFun","docRev","_rev","newDoc","updated","_id","tryAndPut","put","thisAtob","atob","thisBtoa","btoa","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","binStringToBluffer","binString","b64ToBluffer","b64","arrayBufferToBinaryString","buffer","binary","bytes","readAsBinaryString","blob","reader","FileReader","hasBinaryString","onloadend","readAsArrayBuffer","blobToBinaryString","blobOrBuffer","blobToBase64","base64","setImmediateShim","setImmediate","setTimeout","MD5_CHUNK_SIZE","rawToBase64","sliceBlob","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","inputIsString","chunkSize","chunks","ceil","currentChunk","a","loadNextChunk","destroy","stringMd5","hash","rev$$1","deterministic_revs","clonedDoc","_rev_tree","v4","uuid","winningRev","metadata","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","collectLeaves","leaves","isLeaf","acc","sort","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","comparator","mid","low","high","insertSorted","idx","pathToTree","path","numStemmed","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","queue","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","diff","candidateParents","trees","parent","parentIdx","elements","elementsLen","el","stem","stemmedRevs","stemmed","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","tryCatchInChangeListener","lastSeq","Changes$1","complete","removeAllListeners","onDestroy","cancel","isCancelled","bind","validateChanges","processChange","changeList","style","_conflicts","compare","left","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","bStart","computeHeight","height","edges","prnt","from","edge","allDocsKeysParse","skip","limit","descending","doNextCompaction","_compactionQueue","catch","last_seq","_compact","shift","attachmentNameError","AbstractPouchDB","TaskQueue","parseAdapter","adapter","adapters","PouchDB","preferredAdapters","prefix","adapterName","usePrefix","use_prefix","prepareForDestruction","onDestroyed","from_constructor","onClosed","__opts","auto_compaction","prefixedName","backend","_adapter","valid","fail","ready","_changesFilterPlugin","validate","doChanges","continuous","live","normalize","shouldFilter","newPromise","_changes","update_seq","post","bulkDocs","_putLocal","_removeLocal","transformForceOptionToNewEditsOption","oldRevId","oldRevNum","newRevNum","newRevId","new_edits","putDoc","_put","force","putAttachment","attachmentId","api","createAttachment","prevrevpos","content_type","revpos","removeAttachment","remove","docOrId","optsOrRev","was_delete","revsDiff","missing","addToMissing","revId","processDoc","missingForId","_getRevisionTree","missingObj","compactDocument","maxHeight","revTree","candidates","_doCompaction","compact","return_docs","promises","onComplete","all","_getLocal","finishOpenRevs","existing","_get","revs_info","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","_getAttachment","getAttachment","allDocs","start_key","startkey","end_key","endkey","incompatibleOpt","_allDocs","close","_close","_info","db_name","_type","attachmentError","_bulkDocs","registerDependentDatabase","dependentDb","depDB","dependentDbs","destroyDb","_destroy","localDoc","deletedMap","trueName","execute","AbortController","abort","f$1","fetch","h","Headers","eventEmitter","setUpEventEmitter","Pouch","destructListeners","_destructionListeners","dbList","addToPreferredAdapters","plugin","__defaults","defaultOpts","PouchAlt","version","getFieldFromDoc","parsedField","compare$1","parseField","fieldName","fields","current","combinationFields","isCombinationalField","field","getKey","getValue","mergeAndedSelectors","selectors","selector","matcher","$eq","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","$gte","$gt","$lte","$lt","$ne","massageSelector","input","wasAnded","orOrNor","subSelector","pad","padWith","upToLength","padding","targetLength","padLeft","MIN_MAGNITUDE","MAGNITUDE_DIGITS","SEP","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","isNaN","origKey","toJSON","k","indexify","numToIndexableString","toIndexableString","objKey","zero","parseNumber","num","originalIdx","neg","numAsString","magAsString","magnitude","parseFloat","stack","metaStack","lastMetaElement","element","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","abs","factorStr","toFixed","createFieldSorter","getFieldValuesAsArray","sorting","docFieldValue","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","rows","requestDef","inMemoryFields","rowFilter","fieldSorter","every","matchCominationalSelector","matchSelector","userOperator","userValue","some","orMatchers","find","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","re","typeMatch","$elemMatch","$allMatch","$exists","$mod","neValue","$in","$nin","$size","$all","$regex","$type","matchesSelector","rowsMatched","evalFilter","evalView","filterName","view","changesHandler","doc_ids","viewName","ddoc","mapFun","views","filterFun","filters","applyChangesFilterPlugin","toObject","reduce","reservedWords","dataWords","parseRevisionInfo","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","dbOpts","nRevNum","revInfo","specialKey","parseBase64","preprocessString","blobType","asBinary","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","overallErr","docv","docInfo","recv","processedAttachment","updateDoc","revLimit","prev","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","newRev","rev_map","newRevIsDeleted","winningRev$$1","winningRevIsDeleted","delta","rootIsMissing","processDocs","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","idsToDocs","docsDone","docsToDo","checkAllDocsDone","currentDoc","docWritten","nextDoc","ADAPTER_VERSION","DOC_STORE","BY_SEQ_STORE","ATTACH_STORE","ATTACH_AND_SEQ_STORE","META_STORE","LOCAL_STORE","DETECT_BLOB_SUPPORT_STORE","safeJsonParse","safeJsonStringify","json","idbError","evt","encodeMetadata","deletedOrLocal","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","onsuccess","postProcessAttachments","attNames","compactRevs","possiblyOrphanedDigests","seqStore","attStore","attAndSeqStore","deleteOrphanedAttachments","countReq","IDBKeyRange","bound","cursor","openCursor","only","event","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","docInfoError","metaDoc","allDocsProcessed","docCountDelta","preconditionErrored","_meta","blobSupport","startTransaction","txnResult","onabort","ontimeout","oncomplete","updateDocCountIfReady","verifyAttachments","fetchExistingDocs","onAllDocsProcessed","idbProcessDocs","revs_limit","docCount","numFetched","readMetadata","verifyAttachment","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","preventDefault","stopPropagation","getKeyReq","putReq","insertAttachmentMappings","onerror","collectResults","attachmentSaved","saveAttachment","attsAdded","attsToAdd","newAtt","runBatchedCursor","keyRange","batchSize","onBatch","keysBatch","valuesBatch","pseudoCursor","useGetAll","getAll","getAllKeys","onGetAll","onGetAllKeys","continuePseudoCursor","newKeyRange","lastKey","upper","upperOpen","lowerBound","onCursor","onSuccess","allDocsKeys","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","keyRangeError","inclusive_end","onTxnComplete","updateSeq","docIdRevIndex","getMaxUpdateSeq","maxKey","fetchDocAsynchronously","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","returnVal","total_rows","checkBlobSupport","blob$$1","matchedChrome","navigator","userAgent","matchedEdge","countDocs","running","tryCode","applyNext","enqueueTask","action","docIds","numResults","docIdsToMetadata","winningDocs","metadatas","fetchWinningDocAndMetadata","winningDoc","onBatchDone","processMetadataAndWinningDoc","filtered","onGetMetadata","docIdRev","objectStores","blobSupportPromise","cachedDBs","openReqList","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","local","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","onGetMetadataSeq","fetchMetadataSeq","metadataSeq","instanceId","reqOpts","attachId","attachment","blobData","doc_count","idb_attachment_format","oldRev","ret","oStore","oldDoc","openReq","indexedDB","deleteDatabase","cached","open","onupgradeneeded","oldVersion","currentTarget","migrations","migration","onversionchange","storedMetaDoc","completeSetup","storeMetaDocIfReady","instanceKey","IDBPouch","pool","promiseFactories","runNext","doNext","runNextBatch","thisErr","CHANGES_BATCH_SIZE","MAX_SIMULTANEOUS_REVS","CHANGES_TIMEOUT_BUFFER","DEFAULT_HEARTBEAT","supportsBulkGetMap","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$1","hasUrlPrefix","protocol","getHost","user","password","auth","username","genDBUrl","genUrl","pathDel","host","port","paramsToStr","params","shouldCacheBust","ua","isIE","isTrident","isEdge","isGET","HttpPouch","dbUrl","setupPromise","ourFetch","headers","nAuth","now","fetchFun","adapterFun$$1","setup","fetchJSON","response","v","skip_setup","encodeAttachmentId","uuid$$1","ping","compact_running","interval","doBulkGet","doBulkGetShim","numBatches","onResult","batchNum","subOpts","supportsBulkGet","fetchAttachments","filenames","fetchData","browser","fetchAllAttachments","docOrDocs","contentType","Content-Type","paramStr","batch_size","heartbeat","requestTimeout","timeout","leftToFetch","feed","seq_interval","param_name","lastFetchedSeq","controller","aborted","fetchOpts","signal","fetched","raw_results_length","finished","HttpPouch$1","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","TaskQueue$1","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","cachedViews","viewSignature","_cachedViews","promiseForView","depDbName","diffFunction","fullViewName","depDbs","lastSeqDoc","persistentQueues","tempViewQueue","CHANGES_BATCH_SIZE$1","parseViewName","isGenOne","emitError","createAbstractMapReduce","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","Number","coerceOptions","group_level","checkPositiveInteger","number","checkQueryParseError","startkeyName","endkeyName","group","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","metaDocId","defaultMetaDoc","docData","indexableKeysToKeyValues","getMetaDoc","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","keyValue","newKeys","kvDoc","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","getQueue","updateView","updateViewInQueue","mapResults","currentSeq","processNextBatch","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","totalRows","shouldReduce","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","finalResults","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","createViewPromise","stale","abstractQuery","abstractViewCleanup","viewCleanup","builtInReduce","_sum","_count","_stats","sumsqr","_sumsqr","getBuiltIn","reduceFunString","origMap","builtIn","abstract","mapreduce","isGenOne$1","fileHasChanged","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","state","resultDocs","getAllDocs","bulkGetOpts","bulkGetResponse","bulkGetInfo","Boolean","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","CHECKPOINT_VERSION","REPLICATOR","CHECKPOINT_HISTORY_SIZE","LOWEST_SEQ","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","unshift","Checkpointer","writeCheckpoint","updateTarget","updateSource","writeTargetCheckpoint","writeSourceCheckpoint","isForbiddenError","comparisons","targetDoc","sourceDoc","1","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","sourceId","hasSessionId","sessionId","props","rest","floor","getCheckpoint","STARTING_BACK_OFF","backOff","retry","back_off_function","backOffSet","current_back_off","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","currentBatch","repId","checkpointer","batches","pendingBatch","writingCheckpoint","changesCompleted","replicationCompleted","batches_limit","changesPending","changedDocs","start_time","docs_read","docs_written","doc_write_failures","errors","initCheckpointer","checkpointOpts","writeDocs","bulkOpts","completeReplication","errorsById","errorsNo","errorName","finishBatch","outResult","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","startNextBatch","abortReplication","processPendingBatch","immediate","fatalError","end_time","onChangesComplete","onChangesError","_abortChanges","abortChanges","startChanges","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","srcPouch","targetPouch","sync","Sync","canceled","optsPush","optsPull","pull","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","removed","removeAll","isChange","isDenied","isPaused","isActive","addOneListener","listener","success","replication","replicateMethods","other","cleanup","_readyCalled","__webpack_exports__","fn","un","core","dP","DESCRIPTORS","SPECIES","KEY","configurable","getRandomValues","crypto","msCrypto","rnds8","rnds","r","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WriteView_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_WriteView_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","anObject","O","D","macrotask","Observer","MutationObserver","WebKitMutationObserver","isNode","head","flush","domain","exit","enter","nextTick","standalone","toggle","document","createTextNode","observe","characterData","hide","safe","ctor","superCtor","super_","enumerable","writable","TempCtor","platform","arch","execPath","pid","env","argv","binding","cwd","chdir","dir","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","ITERATOR","SAFE_CLOSING","riter","skipClosing","iter","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","entries","step","iterator","iterFn","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","LIBRARY","classof","$export","isObject","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","PROMISE","versions","v8","$Promise","empty","newPromiseCapability","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","it","isReject","_n","chain","_c","_v","_s","run","reaction","exited","handler","_h","onHandleUnhandled","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","G","W","F","capability","remaining","$index","alreadyCalled","race","factory","hex_chr","md5cycle","d","md5blk","md5blks","md5blk_array","md51","tail","tmp","lo","hi","md51_array","subarray","rhex","hex","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","hexToBinaryString","SparkMD5","reset","lsw","msw","clamp","begin","contents","_buff","_length","_hash","_finish","getState","setState","hashBinary","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","v1","WriteViewvue_type_template_id_bbbe1abe_render","_vm","$createElement","_self","staticClass","ref","_l","attrs","timestamp","edit-block","editBlock","contenteditable","input_trigger","keydown","$event","_k","keyCode","ctrlKey","shiftKey","altKey","metaKey","spark","staticRenderFns","_readOnlyError","MessageBlockvue_type_template_id_df06634c_render","click","MessageBlockvue_type_template_id_df06634c_staticRenderFns","MessageBlockvue_type_script_lang_js_","mounted","render","methods","renderedContent","marked_default","$refs","msgBlock","innerHTML","$emit","components_MessageBlockvue_type_script_lang_js_","component","componentNormalizer","MessageBlock","message_Message","Message","classCallCheck","newContent","db_StorageDatabase","StorageDatabase","index_browser_es","toDoc","msgs","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","return","promise_default","storage_db","resetHeight","msgContainer","newHeight","parentElement","offsetHeight","nextSibling","scrollView","scrollTop","scrollHeight","clearTypeWriter","typeWriterContainer","innerText","WriteViewvue_type_script_lang_js_","components","messages","input_text","created","_this","getAllMessages","_this2","newMsg","views_WriteViewvue_type_script_lang_js_","WriteView_component","cof","TAG","ARG","tryGet","B","callee","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MessageBlock_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_6_oneOf_1_0_node_modules_css_loader_index_js_ref_6_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_6_oneOf_1_2_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_MessageBlock_vue_vue_type_style_index_0_lang_css___WEBPACK_IMPORTED_MODULE_0___default","_nodeId","_clockseq","rng","bytesToUuid","_lastMSecs","_lastNSecs","clockseq","seedBytes","msecs","getTime","nsecs","dt","tl","tmh","Constructor","forbiddenField","P","R","finally","onFinally","isFunction","getIterator","ii","Iterators","ArrayProto","try","callbackfn","promiseCapability","byteToHex","bth","argsArray","scheduleDrain","draining","Mutation","observer","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","channel","port1","onmessage","port2","postMessage","oldQueue","defer","invoke","cel","setTask","clearTask","clearImmediate","Dispatch","counter","ONREADYSTATECHANGE","importScripts","clear","normalizeArray","allowAboveRoot","up","splitPathRe","splitPath","xs","resolvedPath","resolvedAbsolute","isAbsolute","trailingSlash","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","basename","ext","extname","getIteratorMethod","ReflectOwnKeys","Reflect","ReflectApply","receiver","ProcessEmitWarning","warning","warn","ownKeys","getOwnPropertySymbols","getOwnPropertyNames","NumberIsNaN","EventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","prepend","events","newListener","warned","w","emitter","onceWrapper","fired","wrapFn","_onceWrap","wrapped","unwrap","evlistener","unwrapListeners","arrayClone","copy","spliceOne","arg","RangeError","setMaxListeners","getMaxListeners","doError","er","context","prependListener","prependOnceListener","position","originalListener","off","rawListeners","eventNames"],"mappings":"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","file":"static/js/chunk-17391506.bc3294d4.js","sourcesContent":["'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","require('../modules/web.dom.iterable');\nrequire('../modules/es6.string.iterator');\nmodule.exports = require('../modules/core.get-iterator');\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","import getArguments from 'argsarray';\nimport nextTick from 'immediate';\nimport { EventEmitter } from 'events';\nimport inherits from 'inherits';\nimport Md5 from 'spark-md5';\nimport uuidV4 from 'uuid';\nimport vuvuzela from 'vuvuzela';\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new Promise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return Promise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return Promise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new Promise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nvar hasLocal;\n\ntry {\n  localStorage.setItem('_pouch_check_localstorage', 1);\n  hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n} catch (e) {\n  hasLocal = false;\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\ninherits(Changes, EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (hasLocalStorage()) {\n    addEventListener(\"storage\", function (e) {\n      self.emit(e.key);\n    });\n  }\n}\n\nfunction Changes() {\n  EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary', 'return_docs'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new Promise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction rev$$1(doc, deterministic_revs) {\n  var clonedDoc = clone(doc);\n  if (!deterministic_revs) {\n    return uuidV4.v4().replace(/-/g, '').toLowerCase();\n  }\n\n  delete clonedDoc._rev_tree;\n  return stringMd5(JSON.stringify(clonedDoc));\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$1, EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$1(db, opts, callback) {\n  EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new Promise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$1.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$1.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$1.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB._changesFilterPlugin) {\n    PouchDB._changesFilterPlugin.normalize(opts);\n    if (PouchDB._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev});\n    }\n    return rev;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  delete opts.limit;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, EventEmitter);\n\nfunction AbstractPouchDB() {\n  EventEmitter.call(this);\n\n  // re-bind prototyped methods\n  for (var p in AbstractPouchDB.prototype) {\n    if (typeof this[p] === 'function') {\n      this[p] = this[p].bind(this);\n    }\n  }\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev$$1();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev;\n    rev = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev) {\n      addToMissing(id, rev);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev) {\n      if (height[rev] > maxHeight) {\n        candidates.push(rev);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev) !== -1) {\n        revs.push(rev);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    Promise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        /* istanbul ignore if */\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev) {\n            return rev.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev) {\n          pos--;\n          return {\n            rev: pos + '-' + rev.id,\n            status: rev.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  // By default set return_docs to false if the caller has opts.live = true,\n  // this will prevent us from collecting the set of changes indefinitely\n  // resulting in growing memory\n  opts.return_docs = ('return_docs' in opts) ? opts.return_docs : !opts.live;\n\n  return new Changes$1(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    Promise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB.adapters;\n  var preferredAdapters = PouchDB.preferredAdapters;\n  var prefix = PouchDB.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB, AbstractPouchDB);\nfunction PouchDB(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB)) {\n    return new PouchDB(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  if (opts.deterministic_revs === undefined) {\n    opts.deterministic_revs = true;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB.adapters[opts.adapter] ||\n      !PouchDB.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue();\n\n  self.adapter = opts.adapter;\n\n  PouchDB.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\n// AbortController was introduced quite a while after fetch and\n// isnt required for PouchDB to function so polyfill if needed\nvar a = (typeof AbortController !== 'undefined')\n    ? AbortController\n    : function () { return {abort: function () {}}; };\n\nvar f$1 = fetch;\nvar h = Headers;\n\nPouchDB.adapters = {};\nPouchDB.preferredAdapters = [];\n\nPouchDB.prefix = '_pouch_';\n\nvar eventEmitter = new EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(EventEmitter.prototype).forEach(function (key) {\n    if (typeof EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB);\n\nPouchDB.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB;\n};\n\nPouchDB.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB);\n\n  PouchAlt.preferredAdapters = PouchDB.preferredAdapters.slice();\n  Object.keys(PouchDB).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\nPouchDB.fetch = function (url, opts) {\n  return f$1(url, opts);\n};\n\n// managed automatically by set-version.js\nvar version = \"7.0.0\";\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        /* eslint-disable no-control-regex */\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n        /* eslint-enable no-control-regex */\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        /* eslint-disable no-control-regex */\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        /* eslint-enable no-control-regex */\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB.plugin(applyChangesFilterPlugin);\n\nPouchDB.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev) {\n  if (!/^\\d+-./.test(rev)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev.indexOf('-');\n  var left = rev.substring(0, idx);\n  var right = rev.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits, dbOpts) {\n  if (!dbOpts) {\n    dbOpts = {\n      deterministic_revs: true\n    };\n  }\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev$$1(doc, dbOpts.deterministic_revs);\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev) && !newEdits) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return Promise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return Promise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new Promise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits, dbOpts);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  if (batchSize === -1) {\n    batchSize = 1000;\n  }\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = new Array(keys.length);\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange ; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result) || {};\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new Promise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    req.onerror = txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler.addListener(dbName, id, api, opts);\n    changesHandler.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return Promise.reject(filtered);\n      }\n\n      if (!filtered) {\n        return Promise.resolve();\n      }\n      numResults++;\n      if (opts.return_docs) {\n        results.push(change);\n      }\n      // process the attachment immediately\n      // for the benefit of live listeners\n      if (opts.attachments && opts.include_docs) {\n        return new Promise(function (resolve) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              resolve(change);\n            });\n          });\n        });\n      } else {\n        return Promise.resolve(change);\n      }\n    }\n\n    function onBatchDone() {\n      var promises = [];\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        promises.push(processMetadataAndWinningDoc(metadata, winningDoc));\n      }\n\n      Promise.all(promises).then(function (changes) {\n        for (var i = 0, len = changes.length; i < len; i++) {\n          if (changes[i]) {\n            opts.onChange(changes[i]);\n          }\n        }\n      }).catch(opts.complete);\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev;\n      if (!opts.rev) {\n        rev = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev = pos + '-' + revHash;\n        if (revs.indexOf(rev) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req = indexedDB.open(dbName, ADAPTER_VERSION);\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n    txn.onabort = idbError(callback);\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Following #7085 buggy idb versions (typically Safari < 10.1) are\n  // considered valid.\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return typeof indexedDB !== 'undefined' && typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new Promise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$1(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return Promise.resolve();\n  }\n\n  return Promise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new Promise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n  var protocol = parseUri(opts.prefix).protocol;\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    // Ensure prefix has a trailing slash\n    var prefix = opts.prefix.replace(/\\/?$/, '/');\n    name = prefix + encodeURIComponent(dbName);\n  }\n\n  var uri = parseUri(name);\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\nfunction shouldCacheBust(opts) {\n  var ua = (typeof navigator !== 'undefined' && navigator.userAgent) ?\n      navigator.userAgent.toLowerCase() : '';\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n  var isGET = !('method' in opts) || opts.method === 'GET';\n  return (isIE || isTrident || isEdge) && isGET;\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n\n  var ourFetch = function (url, options) {\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (opts.auth || host.auth) {\n      var nAuth = opts.auth || host.auth;\n      var str = nAuth.username + ':' + nAuth.password;\n      var token = thisBtoa(unescape(encodeURIComponent(str)));\n      options.headers.set('Authorization', 'Basic ' + token);\n    }\n\n    var headers = opts.headers || {};\n    Object.keys(headers).forEach(function (key) {\n      options.headers.append(key, headers[key]);\n    });\n\n    /* istanbul ignore if */\n    if (shouldCacheBust(options)) {\n      url += (url.indexOf('?') === -1 ? '?' : '&') + '_nonce=' + Date.now();\n    }\n\n    var fetchFun = opts.fetch || f$1;\n    return fetchFun(url, options);\n  };\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    })).bind(api);\n  }\n\n  function fetchJSON(url, options, callback) {\n\n    var result = {};\n\n    options = options || {};\n    options.headers = options.headers || new h();\n\n    if (!options.headers.get('Content-Type')) {\n      options.headers.set('Content-Type', 'application/json');\n    }\n    if (!options.headers.get('Accept')) {\n      options.headers.set('Accept', 'application/json');\n    }\n\n    return ourFetch(url, options).then(function (response) {\n      result.ok = response.ok;\n      result.status = response.status;\n      return response.json();\n    }).then(function (json) {\n      result.data = json;\n      if (!result.ok) {\n        result.data.status = result.status;\n        var err = generateErrorFromResponse(result.data);\n        if (callback) {\n          return callback(err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (Array.isArray(result.data)) {\n        result.data = result.data.map(function (v) {\n          if (v.error || v.missing) {\n            return generateErrorFromResponse(v);\n          } else {\n            return v;\n          }\n        });\n      }\n\n      if (callback) {\n        callback(null, result.data);\n      } else {\n        return result;\n      }\n    });\n  }\n\n  var setupPromise;\n\n  function setup() {\n    if (opts.skip_setup) {\n      return Promise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    setupPromise = fetchJSON(dbUrl).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return fetchJSON(dbUrl, {method: 'PUT'});\n      } else {\n        return Promise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return Promise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ourFetch(genUrl(host, '')).then(function (response) {\n      return response.json();\n    }).then(function (result) {\n      var uuid$$1 = (result && result.uuid) ?\n          (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    fetchJSON(genDBUrl(host, '_compact'), {method: 'POST'}).then(function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      fetchJSON(genDBUrl(host, '_bulk_get' + paramsToStr(params)), {\n        method: 'POST',\n        body: JSON.stringify({ docs: opts.docs})\n      }).then(function (result) {\n        if (opts.attachments && opts.binary) {\n          result.data.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(null, result.data);\n      }).catch(cb);\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      return ourFetch(genDBUrl(host, ''));\n    }).then(function (response) {\n      return response.json();\n    }).then(function (info) {\n      info.host = genDBUrl(host, '');\n      callback(null, info);\n    }).catch(callback);\n  };\n\n  api.fetch = function (path, options) {\n    return setup().then(function () {\n      return ourFetch(genDBUrl(host, path), options);\n    });\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetchData(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n            '?rev=' + doc._rev;\n        return ourFetch(genDBUrl(host, path)).then(function (response) {\n          if (typeof process !== 'undefined' && !process.browser) {\n            return response.buffer();\n          } else {\n            /* istanbul ignore next */\n            return response.blob();\n          }\n        }).then(function (blob) {\n          if (opts.binary) {\n            // TODO: Can we remove this?\n            if (typeof process !== 'undefined' && !process.browser) {\n              blob.type = att.content_type;\n            }\n            return blob;\n          }\n          return new Promise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetchData(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return Promise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    var url = genDBUrl(host, id + paramsToStr(params));\n    fetchJSON(url).then(function (res) {\n      return Promise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res.data);\n        }\n      }).then(function () {\n        callback(null, res.data);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove', function (docOrId, optsOrRev, opts, cb) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        cb = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        cb = optsOrRev;\n        opts = {};\n      } else {\n        cb = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev = (doc._rev || opts.rev);\n    var url = genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev;\n\n    fetchJSON(url, {method: 'DELETE'}, cb).catch(cb);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment = adapterFun$$1('getAttachment', function (docId, attachmentId,\n                                                            opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n        encodeAttachmentId(attachmentId) + params;\n    var contentType;\n    ourFetch(url, {method: 'GET'}).then(function (response) {\n      contentType = response.headers.get('content-type');\n      if (!response.ok) {\n        throw response;\n      } else {\n        if (typeof process !== 'undefined' && !process.browser) {\n          return response.buffer();\n        } else {\n          /* istanbul ignore next */\n          return response.blob();\n        }\n      }\n    }).then(function (blob) {\n      // TODO: also remove\n      if (typeof process !== 'undefined' && !process.browser) {\n        blob.type = contentType;\n      }\n      callback(null, blob);\n    }).catch(function (err) {\n      callback(err);\n    });\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =  adapterFun$$1('removeAttachment', function (docId,\n                                                                   attachmentId,\n                                                                   rev,\n                                                                   callback) {\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n                       encodeAttachmentId(attachmentId)) + '?rev=' + rev;\n    fetchJSON(url, {method: 'DELETE'}, callback).catch(callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment = adapterFun$$1('putAttachment', function (docId, attachmentId,\n                                                            rev, blob,\n                                                            type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev;\n      rev = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev) {\n      url += '?rev=' + rev;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    // Add the attachment\n    fetchJSON(url, {\n      headers: new h({'Content-Type': type}),\n      method: 'PUT',\n      body: blob\n    }, callback).catch(callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return Promise.all(req.docs.map(preprocessAttachments$1));\n    }).then(function () {\n      // Update/create the documents\n      return fetchJSON(genDBUrl(host, '_bulk_docs'), {\n        method: 'POST',\n        body: JSON.stringify(req)\n      }, callback);\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$1(doc);\n    }).then(function () {\n      return fetchJSON(genDBUrl(host, encodeDocId(doc._id)), {\n        method: 'PUT',\n        body: JSON.stringify(doc)\n      });\n    }).then(function (result) {\n      callback(null, result.data);\n    }).catch(function (err) {\n      err.docId = doc && doc._id;\n      callback(err);\n    });\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    fetchJSON(genDBUrl(host, '_all_docs' + paramStr), {\n       method: method,\n      body: JSON.stringify(body)\n    }).then(function (result) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        result.data.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, result.data);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout : 30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    /* istanbul ignore if */\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    \n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var controller = new a();\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetchData = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Cloudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var url = genDBUrl(host, '_changes' + paramsToStr(params));\n      var fetchOpts = {\n        signal: controller.signal,\n        method: method,\n        body: JSON.stringify(body)\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        return fetchJSON(url, fetchOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (opts.return_docs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetchData(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetchData(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        controller.abort();\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    fetchJSON(genDBUrl(host, '_revs_diff'), {\n      method: 'POST',\n      body: JSON.stringify(req)\n    }, callback).catch(callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    fetchJSON(genDBUrl(host, ''), {method: 'DELETE'}).then(function (json) {\n      callback(null, json);\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status === 404) {\n        callback(null, {ok: true});\n      } else {\n        callback(err);\n      }\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$1() {\n  this.promise = new Promise(function (fulfill) {fulfill(); });\n}\nTaskQueue$1.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$1.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$1();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n    var ok, status;\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.fetch('_design/' + parts[0] + '/_view/' + parts[1] + params, {\n        headers: new h({'Content-Type': 'application/json'}),\n        method: method,\n        body: JSON.stringify(body)\n      }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n        return response.json();\n      }).then(function (result) {\n        if (!ok) {\n          result.status = status;\n          throw generateErrorFromResponse(result);\n        }\n        // fail the entire request if the result contains an error\n        result.rows.forEach(function (row) {\n          /* istanbul ignore if */\n          if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n            throw new Error(row.reason);\n          }\n        });\n        return result;\n      }).then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n\n    return db.fetch('_temp_view' + params, {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST',\n      body: JSON.stringify(body)\n    }).then(function (response) {\n        ok = response.ok;\n        status = response.status;\n      return response.json();\n    }).then(function (result) {\n      if (!ok) {\n        result.status = status;\n        throw generateErrorFromResponse(result);\n      }\n      return result;\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new Promise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new Promise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return Promise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return Promise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return Promise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$1();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$1();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        return_docs: true,\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return Promise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.fetch('_view_cleanup', {\n      headers: new h({'Content-Type': 'application/json'}),\n      method: 'POST'\n    }).then(function (response) {\n      return response.json();\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return Promise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n\n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = Promise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev) {\n  return /^1-/.test(rev);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return Promise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return Promise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return Promise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return Promise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return Promise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return Promise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  /* istanbul ignore if */\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return Promise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new Promise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n\n  result = result || {\n    ok: true,\n    start_time: new Date().toISOString(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return Promise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date().toISOString();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    nextTick(function () {\n      processPendingBatch(batches.length === 0 && changesOpts.live);\n    });\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.results[changes.results.length - 1].seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, EventEmitter);\nfunction Replication() {\n  EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new Promise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, EventEmitter);\nfunction sync(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = Promise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB.plugin(IDBPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n\nexport default PouchDB;\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","'use strict';\nvar global = require('./_global');\nvar core = require('./_core');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = typeof core[KEY] == 'function' ? core[KEY] : global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && msCrypto.getRandomValues.bind(msCrypto));\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WriteView.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WriteView.vue?vue&type=style&index=0&lang=css&\"","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var hide = require('./_hide');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    if (safe && target[key]) target[key] = src[key];\n    else hide(target, key, src[key]);\n  } return target;\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","exports.nextTick = function nextTick(fn) {\n\tsetTimeout(fn, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","module.exports = require(\"core-js/library/fn/get-iterator\");","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n","module.exports = require(\"core-js/library/fn/promise\");","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"write_view\"},[_c('div',{ref:\"msgContainer\",staticClass:\"message_container\"},[_vm._l((_vm.messages),function(message){return [_c('MessageBlock',{key:message._id,attrs:{\"content\":message.content,\"timestamp\":message.timestamp.toString()},on:{\"edit-block\":_vm.editBlock}})]})],2),_c('div',{ref:\"typeWriterContainer\",staticClass:\"type_writer_container\",attrs:{\"contenteditable\":\"true\"},on:{\"input\":_vm.input_trigger,\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }if(!$event.ctrlKey){ return null; }if($event.shiftKey||$event.altKey||$event.metaKey){ return null; }return _vm.spark($event)}}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"message\"},[_c('div',{ref:\"msgBlock\",on:{\"click\":_vm.edit}}),_c('div',{staticClass:\"status\"},[_vm._v(\"last edit: \"+_vm._s(_vm.timestamp))])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <!-- <div class=\"message\" ref=\"msgBlock\" @click=\"edit\"></div> -->\n  <div class=\"message\">\n      <div ref=\"msgBlock\" @click=\"edit\">\n      </div>\n      <div class=\"status\">last edit: {{ timestamp }}</div>\n  </div>\n</template>\n<script>\nimport marked from 'marked';\nexport default {\n    props: {\n        content: String,\n        timestamp: String,\n    },\n    mounted() {\n        this.render();\n    },\n    methods: {\n        render() {\n            const renderedContent = marked(this.content);\n            this.$refs.msgBlock.innerHTML = renderedContent;\n        },\n        edit() {\n            this.$emit('edit-block', this.content);\n        },\n    },\n};\n</script>\n<style>\n.message {\n    /* height: 300px; */\n    /* max-width: 80%; */\n    border: 1px, dotted, black;\n    border-style: dotted;\n    border-radius: 5px;\n    margin: 5px;\n    padding: 5px;\n}\n.status {\n    text-align: right;\n    font-size: 50%;\n}\n</style>\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBlock.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBlock.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MessageBlock.vue?vue&type=template&id=df06634c&\"\nimport script from \"./MessageBlock.vue?vue&type=script&lang=js&\"\nexport * from \"./MessageBlock.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MessageBlock.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","class Message {\n    public content: string;\n    public timestamp: Date;\n    constructor(content: string) {\n        this.content = content;\n        this.timestamp = new Date();\n    }\n    public toDoc() {\n        return {\n            _id: this.timestamp.toJSON(),\n            content: this.content,\n            timestamp: this.timestamp,\n        };\n    }\n    public updateContent(newContent: string) {\n        this.content = newContent;\n    }\n}\nexport default Message;\n","import PouchDB from 'pouchdb';\nimport Message from './message';\nclass StorageDatabase {\n    private db: PouchDB.Database;\n    constructor() {\n        this.db = new PouchDB('local');\n        // this.db.put(new Message(\"This is your first message\").toDoc()).then(() => {\n        //     return this.db.put(new Message(\"And this is the second!\").toDoc());\n        // }).then(() => {\n        //     return this.db.put(new Message(\"You know **third time is a charm!**\").toDoc());\n        // });\n    }\n    public newMsg(content: string) {\n        const msg = new Message(content);\n        const doc = msg.toDoc();\n        this.db.put(doc);\n        return doc;\n    }\n    public getAllMessages() {\n        return this.db.allDocs({ include_docs: true }).then((docs) => {\n            const msgs: Array<object | undefined> = [];\n            for (const doc of docs.rows) {\n                msgs.push(doc.doc);\n            }\n            return new Promise((resolve) => {\n                if (msgs.length > 0) {\n                    resolve(msgs);\n                }\n            });\n        });\n        // return new Promise((resolve, reject) => {\n        //     this.db.allDocs()\n        // });\n    }\n}\n\nconst db = new StorageDatabase();\n\n\nexport default db;\n","<template>\n  <div>\n    <div class=\"write_view\">\n      <div class=\"message_container\" ref=\"msgContainer\">\n        <template v-for=\"message in messages\">\n          <MessageBlock\n            :key=\"message._id\"\n            :content=\"message.content\"\n            :timestamp=\"message.timestamp.toString()\"\n            v-on:edit-block=\"editBlock\"\n          ></MessageBlock>\n        </template>\n      </div>\n      <div\n        class=\"type_writer_container\"\n        contenteditable=\"true\"\n        ref=\"typeWriterContainer\"\n        @input=\"input_trigger\"\n        @keydown.enter.ctrl.exact=\"spark\"\n      ></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport MessageBlock from '../components/MessageBlock';\nimport db from '../storage/db.ts';\n\n// import TypeWriter from './TypeWriter';\nfunction resetHeight(msgContainer) {\n    const newHeight =\n        msgContainer.parentElement.offsetHeight -\n        msgContainer.nextSibling.offsetHeight;\n    // newHeight is taken from the difference of parentElement (.write_view) and nextSibling (.type_writer_container)\n    if (newHeight < 10) {\n        // height is at least 10\n        newHeight = 10;\n    }\n    msgContainer.style.height = '' + newHeight + 'px';\n}\n\nfunction scrollView(msgContainer) {\n    msgContainer.scrollTop = msgContainer.scrollHeight;\n}\n\nfunction clearTypeWriter(typeWriterContainer) {\n    typeWriterContainer.innerText = '';\n}\n\nexport default {\n    components: {\n        MessageBlock,\n        // TypeWriter\n    },\n    data() {\n        return {\n            messages: [],\n            input_text: '',\n        };\n    },\n    created() {\n        db.getAllMessages().then((msgs) => {\n            this.messages = msgs;\n        });\n    },\n    methods: {\n        input_trigger() {\n            resetHeight(this.$refs.msgContainer);\n        },\n        spark() {\n            this.messages.push(\n                db.newMsg(this.$refs.typeWriterContainer.innerText),\n            );\n            setTimeout(() => scrollView(this.$refs.msgContainer), 1); // TODO: should use nextTick\n            clearTypeWriter(this.$refs.typeWriterContainer);\n            resetHeight(this.$refs.msgContainer);\n            // resize after clearing\n        },\n        editBlock(content) {\n            this.$refs.typeWriterContainer.innerText = content;\n        },\n    },\n};\n</script>\n\n<style>\nbody,\nhtml {\n    overflow: hidden;\n}\n.write_view {\n    overflow-y: auto;\n    max-width: 600px;\n    height: 100vh;\n    margin: 0 auto;\n}\n.message_container {\n    overflow-y: scroll;\n    height: 80vh;\n}\n.type_writer_container {\n    position: absolute;\n    width: 600px;\n    margin: 0 auto;\n    bottom: 0%;\n    display: block;\n    border: solid 1px black;\n    min-height: 20vh;\n}\n\n.typer {\n    position: absolute;\n    bottom: 5px;\n    box-sizing: border-box;\n    /* display: flex; */\n    align-items: center;\n    /* height: 4.9rem; */\n    width: 100%;\n    background-color: #fff;\n    box-shadow: 0 -5px 10px -5px rgba(0, 0, 0, 0.2);\n}\n.input {\n    /* position: absolute; */\n    /* left: 2.5rem; */\n    padding: 1rem;\n    width: 100%;\n    background-color: transparent;\n    border: none;\n    outline: none;\n    font-size: 1.25rem;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WriteView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WriteView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WriteView.vue?vue&type=template&id=bbbe1abe&\"\nimport script from \"./WriteView.vue?vue&type=script&lang=js&\"\nexport * from \"./WriteView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WriteView.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBlock.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MessageBlock.vue?vue&type=style&index=0&lang=css&\"","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\nvar _clockseq;\n\n// Previous uuid creation time\nvar _lastMSecs = 0;\nvar _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n  if (node == null || clockseq == null) {\n    var seedBytes = rng();\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [\n        seedBytes[0] | 0x01,\n        seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]\n      ];\n    }\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  }\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","var anObject = require('./_an-object');\nvar get = require('./core.get-iterator-method');\nmodule.exports = require('./_core').getIterator = function (it) {\n  var iterFn = get(it);\n  if (typeof iterFn != 'function') throw TypeError(it + ' is not iterable!');\n  return anObject(iterFn.call(it));\n};\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","'use strict';\n// https://github.com/tc39/proposal-promise-try\nvar $export = require('./_export');\nvar newPromiseCapability = require('./_new-promise-capability');\nvar perform = require('./_perform');\n\n$export($export.S, 'Promise', { 'try': function (callbackfn) {\n  var promiseCapability = newPromiseCapability.f(this);\n  var result = perform(callbackfn);\n  (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n  return promiseCapability.promise;\n} });\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n","require('../modules/es6.object.to-string');\nrequire('../modules/es6.string.iterator');\nrequire('../modules/web.dom.iterable');\nrequire('../modules/es6.promise');\nrequire('../modules/es7.promise.finally');\nrequire('../modules/es7.promise.try');\nmodule.exports = require('../modules/_core').Promise;\n","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n"],"sourceRoot":""}